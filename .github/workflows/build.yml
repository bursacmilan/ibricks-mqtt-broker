name: .NET Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Image version'
        required: false
        default: 'latest'
  push:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    env:
      IMAGE_NAME: ghcr.io/bursacmilan/ibricks-mqtt-broker
      DOCKER_TARGET_PLATFORM: linux/arm64
      DOCKER_IMAGE_TAG: ${{ inputs.version }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore Dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release

    - name: Test
      run: dotnet test

    - name: Dotnet publish
      run: dotnet publish ./ibricks-mqtt-broker-webapp/ibricks-mqtt-broker-webapp.csproj --configuration Release --output publishedOutput

    - name: Move docker file
      run: mv Dockerfile publishedOutput/Dockerfile

    - name: Move run script
      run: mv run.sh publishedOutput/run.sh

    - name: Build docker image
      shell: pwsh
      run: |
        $version = "${{ env.DOCKER_IMAGE_TAG}}";
        if($version -eq "") {
            $version = "latest"
        }
        
        Write-Host $version
        cd publishedOutput
        docker build . --platform ${{ env.DOCKER_TARGET_PLATFORM }} --tag "${{ env.IMAGE_NAME }}:$version"
        
    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

    - name: Push image
      run: |
        $version = "${{ env.DOCKER_IMAGE_TAG}}";
        if($version -eq "") {
            $version = "latest"
        }
        
        Write-Host $version
        docker push "${{ env.IMAGE_NAME }}:$version"
      shell: pwsh
